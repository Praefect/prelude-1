.prelude-buttons (@use) when (@use = true) {
    .button {
        .inline-block();
        .unit('padding-top', @base-fontSize*.5);
        .unit('padding-right', @base-fontSize*1.3);
        .unit('padding-bottom', @base-fontSize*.5);
        .unit('padding-left', @base-fontSize*1.3);
        line-height: 1;
        text-align: center;
        vertical-align: middle;
        .buttonBackground(@button-bgColor, @button-hightLight-bgColor, @button-textColor, 0 1px 1px rgba(255,255,255,.75));
        border: 1px solid @button-borderColor;
        border-bottom-color: darken(@button-borderColor, 10%);
        cursor: pointer;
        .box-shadow(~"inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05)");
        .border-radius(@button-borderRadius);
        .user-select (none);

        // Hover state
        &:hover {
            color: @button-hover-textColor;
            text-decoration: none;
            background-color: @button-hover-bgColor;

            // transition is only when going to hover, otherwise the background
            // behind the gradient (there for IE<=9 fallback) gets mismatched
            .transition(background-position .1s linear);
        }

        // Active state
        &.button_active,
        &:active {
            background-color: @button-active-bgColor;
            background-image: none;
            .box-shadow(~"inset 0 2px 4px rgba(0,0,0,.15), 0 1px 2px rgba(0,0,0,.05)");
        }

        // Disabled state
        &.button_disabled,
        &[disabled] {
            cursor: default;
            background-color: @button-disable-bgColor;
            background-image: none;
            .opacity(@button-disable-opacity);
            .box-shadow(none);
        }

        //button types
        &.button_radius {
            .border-radius(@button-borderRadius);
        }
        &.button_round {
            .border-radius(@button-rounded);
        }

        // icon
        & > .icon {
            color: @button-icon-textColor;
        }
        &.button_label {
            position: relative;
            .unit('padding-right', @base-fontSize*1.5);
            .unit('padding-left', @base-fontSize*4);
            & > .icon {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 2.5em;
                line-height: 2;
                background-color: fade(@button-icon-bgColor, 5%);
                .box-shadow(-1px 0 0 0 rgba(0,0,0,0.1) inset);
            }
        }
    }

    //remove focus dashed
    .button {
        outline: none;
        &:focus {
            outline: none;
        }
        &:active {
            outline: none;
        }
    }

    .button::-moz-focus-inner {
        border: 0;
        padding: 0;
        outline: 0;
    }

    //Button groups
    .button_group {
        position: relative;
        .inline-block();
        .unit('margin-right', @base-fontSize * 0.33);
        vertical-align: bottom;
        &:after {
            clear: both;
        }
        &:before, &:after {
            content: "";
            display: table;
        }
        > .button {
            .border-radius(0);
            &:first-child {
                .border-radius(@button-borderRadius 0 0 @button-borderRadius);
            }
            &:last-child {
                .border-radius(0 @button-borderRadius @button-borderRadius 0);
            }
        }
        > .button,
        > input {
            float: left;
            margin-left: -1px;
        }
        .or {
            position: relative;
            float: left;
            width: .3em;
            height: 1em;
            .unit('margin-top', @base-fontSize*.5);
            color: transparent;
            &:before {
                position: absolute;
                top: 0;
                left: 50%;
                content: 'or';
                height: 1.5em;
                width: 1.5em;
                margin-top: -.2em;
                margin-left: -.75em;
                color: @button-or-textColor;
                text-align: center;
                background-color: @button-or-bgColor;
                .border-radius(100%);
                .box-shadow(0 0 0 1px fade(#000, 10%));
            }
        }
    }

    // button size
    .button,
    .button_group {
        &.button_mini {
            .unit('padding-top', @base-fontSize*.4);
            .unit('padding-bottom', @base-fontSize*.4);
            .font-size(@base-fontSize * .625);
        }
        &.button_tiny {
            .font-size(@base-fontSize * .75);
        }
        &.button_small {
            .font-size(@base-fontSize * .875);
        }
        &.button_medium {
            .font-size(@base-fontSize);
        }
        &.button_large {
            .font-size(@base-fontSize * 1.125);
        }
        &.button_big {
            .font-size(@base-fontSize * 1.25);
        }
        &.button_huge {
            .font-size(@base-fontSize * 1.375);
        }
        &.button_massive {
            .font-size(@base-fontSize * 1.5);
        }
    }
}

.prelude-buttons (@use-buttons);