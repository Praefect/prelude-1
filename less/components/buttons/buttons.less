.prelude-buttons (@use) when (@use = true) {
    button,
    .button {
        .inline-block();
        .unit('padding-top', @button-padding-top);
        .unit('padding-right', @button-padding-right);
        .unit('padding-bottom', @button-padding-bottom);
        .unit('padding-left', @button-padding-left);
        line-height: 1;
        color: @button-color;
        text-align: center;
        vertical-align: middle;
        background-color: @button-bgColor;
        background-image: none;
        border: 1px solid transparent;
        cursor: pointer;
        outline: none;
        .border-radius(@button-borderRadius);
        .user-select (none);
        .hook-button;

        // Hover state && focus
        // ======================================================================
        &:hover,
        &:focus {
            color: @button-hover-color;
            text-decoration: none;
            background-color: @button-hover-bgColor;
            outline: none;

            // transition is only when going to hover, otherwise the background
            // behind the gradient (there for IE<=9 fallback) gets mismatched
            .transition(background-position .1s linear);

            .hook-button-hover;
        }

        // Active state
        // ======================================================================
        &.button_active,
        &:active {
            background-color: @button-active-bgColor;
            background-image: none;
            outline: none;

            .hook-button-active;
        }

        // Disabled state
        // ======================================================================
        &.button_disabled,
        &[disabled] {
            cursor: default;
            background-color: @button-disable-bgColor;
            .opacity(@button-disable-opacity);

            .hook-button-disabled;
        }

        // button types
        // ======================================================================
        &.button_radius {
            .border-radius(@button-radius);
        }
        &.button_round {
            .border-radius(@button-rounded);
        }

        // icon
        // ======================================================================
        & > .icon {
            color: @button-icon-color;
            .hook-button-icon;
        }
        &.button_label {
            position: relative;
            .unit('padding-right', @button-label-padding-right);
            .unit('padding-left', @button-label-padding-left);
            .hook-button-label;
            & > .icon {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 2.5em;
                line-height: 2;
                background-color: fade(@button-icon-bgColor, 15%);
            }
        }
    }

    .button::-moz-focus-inner {
        border: 0;
        padding: 0;
        outline: 0;
    }

    // Button groups
    // ==========================================================================
    .buttons {
        position: relative;
        .inline-block();
        .unit('margin-right', @buttons-margin-right);
        vertical-align: bottom;
        .hook-buttons;
        &:after {
            clear: both;
        }
        &:before, &:after {
            content: "";
            display: table;
        }
        > .button {
            .border-radius(0);
            &:first-child {
                .border-radius(@button-borderRadius 0 0 @button-borderRadius);
            }
            &:last-child {
                .border-radius(0 @button-borderRadius @button-borderRadius 0);
            }
        }
        > .button,
        > input {
            float: left;
            margin-left: -1px;
        }
        .or {
            position: relative;
            float: left;
            width: .3em;
            height: 1em;
            .unit('margin-top', @button-or-mragin-top);
            color: transparent;
            .hook-button-or;
            &:before {
                position: absolute;
                top: 0;
                left: 50%;
                content: 'or';
                height: 1.5em;
                width: 1.5em;
                margin-top: -.2em;
                margin-left: -.75em;
                color: @button-or-color;
                text-align: center;
                background-color: @button-or-bgColor;
                .border-radius(100%);
            }
        }
    }

    // button size
    // ==========================================================================
    button,
    .button,
    .buttons {
        &.button_mini {
            .unit('padding-top', @button-mini-padding-top);
            .unit('padding-bottom', @button-mini-padding-bottom);
            .font-size(@button-mini-fontSize);
        }
        &.button_tiny {
            .font-size(@button-tiny-fontSize);
        }
        &.button_small {
            .font-size(@button-small-fontSize);
        }
        &.button_medium {
            .font-size(@button-medium-fontSize);
        }
        &.button_large {
            .font-size(@button-large-fontSize);
        }
        &.button_big {
            .font-size(@button-big-fontSize);
        }
        &.button_huge {
            .font-size(@button-huge-fontSize);
        }
        &.button_massive {
            .font-size(@button-massive-fontSize);
        }
    }

    // Hook
    // ==========================================================================
    .hook-button-misc;
}

.prelude-buttons (@use-buttons);