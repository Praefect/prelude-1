.prelude-progress (@use) when (@use = true) {
	.progress {
		.unit('height', @progress-height);
		.unit('margin-bottom', @progress-margin-bottom);
		.unit('padding', @progress-padding);
		background-color: @progress-bgColor;
		border: 1px solid @progress-borderColor;
		overflow: hidden;
		.hook-progress;

		.meter {
			display: block;
			height: 100%;
			background: @progress-meter-bgColor;
			.hook-progress-meter;
		}
	}

	// type
	// ======================================================================
	.progress_radius {
		.border-radius(@progress-radius);
	}
	.progress_round {
		.border-radius(@progress-round);
	}
	.progress_radius,
	.progress_round {
		.meter {
			.border-radius(inherit);
		}
	}


	// size
	// ======================================================================
	.progress_small {
		.unit('height', @progress-small-height);
	}
	.progress_large {
		.unit('height', @progress-large-height);
	}

	// striped
	// ======================================================================
	.progress_striped {
		.hook-progress-striped;
		.meter {
			#gradient > .striped;
			background-size: 40px 40px;
			.hook-progress-meter-striped;
		}
	}

	// Hook
	// ==========================================================================
	.hook-progress-misc;
}

.prelude-progress (@use-progress);